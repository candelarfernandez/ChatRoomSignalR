@using ChatRoom.Datos.Entidades
@model ChatRoom.Datos.Entidades.Sala

@{
    var authenticatedUser = ViewData["AuthenticatedUser"] as Usuario;
    var isCreator = (bool)ViewData["IsCreator"];
}

<h1>@Model.Nombre</h1>

<div class="row">
    <div class="col-12">
        <img src="@Model.FotoProductoNombre" alt="Imagen del producto subastado" class="img-fluid" />
    </div>
</div>
<style>
    .img-fluid {
        max-width: 20%;
        height: auto;
        display: block;
        margin: 0 auto;
    }
</style>

<div class="row">
    @if (!isCreator)
    {
        <form method="post" action="~/Chat/CreateOferta" id="ofertaForm">
            <div class="col-12">
                <label for="idSala">ID Sala</label>
                <input type="number" class="form-control" id="sala" name="idSala" value="@Model.Id" readonly />
                @if (authenticatedUser != null)
                {
                    <input type="hidden" id="user" name="idUsuario" value="@authenticatedUser.Id" />
                    <input type="hidden" id="userName" value="@authenticatedUser.UserName" />
                }
                <label for="monto">Monto</label>
                <input type="number" class="form-control" id="monto" name="monto" required />
                <button id="btnSend">Enviar Puja</button>
            </div>
        </form>
    }
    else
    {
        <form method="post" action="~/Chat/CreateOferta" id="ofertaForm" type="hidden">
            <div class="col-12">
                <input type="hidden" class="form-control" id="sala" name="idSala" value="@Model.Id" readonly  />
                @if (authenticatedUser != null)
                {
                    <input type="hidden" id="user" name="idUsuario" value="@authenticatedUser.Id" />
                    <input type="hidden" id="userName" value="@authenticatedUser.UserName" />
                }
                <input type="hidden" class="form-control" id="monto" name="monto"  required />
                <button style="display:none" id="btnSend">Enviar puja</button>
            </div>
        </form>
    }

@if (authenticatedUser != null && authenticatedUser.Id == Model.IdVendedor)
{
    <form method="post" action="~/Chat/FinalizarSubasta" id="finalizarSubastaForm">
        <input type="hidden" id="idSala" name="idSala" value="@Model.Id" />
        <button id="btnFinalizarSubasta">Finalizar subasta</button>
    </form>
}
</div>

<div class="row">
    <div class="col-6">
        <div id="montos">
        </div>
    </div>
    <div class="col-6">
        <div id="errors"></div>
    </div>
    <div class="col-6">
        <div id="notifications"></div>
    </div>
</div>

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

    connection.start().then(() => {
        let userName = document.getElementById("userName").value;
        connection.invoke("JoinSala", "@Model.Id", userName)
    }).catch((e) => console.error(e));

        document.getElementById("btnSend").addEventListener("click", (event) => {
     
            let salaId = "@Model.Id";
            let userId = document.getElementById("user").value;
            let monto = document.getElementById("monto").value;   

        connection.invoke("AddOferta", salaId, userId, monto).catch((err) =>
            console.error(err.toString()));

        document.getElementById("monto").value = "";
        document.getElementById("monto").focus();
        event.preventDefault();
        });

    connection.on("ReceiveOferta", (ofertas) => {
        var ofertasHtml = "";
        ofertas.forEach(oferta => {
            ofertasHtml += `<div><b>Monto:</b> ${oferta.monto}, <b>Comprador:</b> ${oferta.idComprador}</div>`;
        });
        document.getElementById("montos").innerHTML = ofertasHtml;
    });
    connection.on("ShowError", (message) => {
        var errorsHtml = `<div class="alert alert-danger"><b>${message}</b></div>`;
        document.getElementById("errors").innerHTML = errorsHtml + document.getElementById("errors").innerHTML;
    });

    connection.on("ShowWho", (message) => {
        var notificationHtml = `<div><b>${message}</b></div>`;
        document.getElementById("notifications").innerHTML = notificationHtml + document.getElementById("notifications").innerHTML;
    });

    connection.on("CloseAuction", () => {
        Toastify({
            text: "La subasta ha finalizado. Serás redirigido.",
            duration: 3000,
            close: true,
            gravity: "bottom", 
            position: "center",
            backgroundColor: "#ff6f69",
            stopOnFocus: true, 
        }).showToast();

        setTimeout(() => {
            window.location.href = "/Chat/Index";
        }, 3000);
    });

    connection.on("ReceiveNotification", (message) => {
        Toastify({
            text: message,
            duration: 6000,
            close: true,
            gravity: "bottom",
            position: "center",
            backgroundColor: "#88d8b0",
            stopOnFocus: true, 
        }).showToast();
    });

    document.getElementById("btnFinalizarSubasta").addEventListener("click", function (event) {
        var numOfertas = document.getElementById("montos").children.length;

        if (numOfertas > 0) {
            return true;
        } else {
            var errorMessage = "No se puede finalizar la subasta porque no hay ofertas en la sala.";
            var errorsHtml = `<div class="alert alert-danger"><b>${errorMessage}</b></div>`;
            document.getElementById("errors").innerHTML = errorsHtml;
            event.preventDefault(); 
        }
    });

    </script>